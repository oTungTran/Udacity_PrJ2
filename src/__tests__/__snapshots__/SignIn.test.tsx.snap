// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LoginForm /> snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="login-form"
      >
        <div
          class="wrapper"
        >
          <h1
            class="h1"
          >
            Login
          </h1>
          <form
            autocomplete="false"
            class="form"
            novalidate=""
          >
            <div
              class="control"
            >
              <div
                class="wrapper"
              >
                <label
                  class="label"
                  for="username"
                >
                  Username
                </label>
                <div
                  class="inputBlock"
                >
                  <input
                    class="input "
                    id="username"
                    name="username"
                    placeholder="Username"
                    type="text"
                    value=""
                  />
                </div>
              </div>
            </div>
            <div
              class="control"
            >
              <div
                class="wrapper"
              >
                <label
                  class="label"
                  for="password"
                >
                  Password
                </label>
                <div
                  class="inputBlock"
                >
                  <input
                    class="input "
                    id="password"
                    name="password"
                    placeholder="Password"
                    type="text"
                    value=""
                  />
                </div>
              </div>
            </div>
            <div
              class="control"
            >
              <button
                class="loginBtn wrapper primary l  "
              >
                <span>
                  Log in
                </span>
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="login-form"
    >
      <div
        class="wrapper"
      >
        <h1
          class="h1"
        >
          Login
        </h1>
        <form
          autocomplete="false"
          class="form"
          novalidate=""
        >
          <div
            class="control"
          >
            <div
              class="wrapper"
            >
              <label
                class="label"
                for="username"
              >
                Username
              </label>
              <div
                class="inputBlock"
              >
                <input
                  class="input "
                  id="username"
                  name="username"
                  placeholder="Username"
                  type="text"
                  value=""
                />
              </div>
            </div>
          </div>
          <div
            class="control"
          >
            <div
              class="wrapper"
            >
              <label
                class="label"
                for="password"
              >
                Password
              </label>
              <div
                class="inputBlock"
              >
                <input
                  class="input "
                  id="password"
                  name="password"
                  placeholder="Password"
                  type="text"
                  value=""
                />
              </div>
            </div>
          </div>
          <div
            class="control"
          >
            <button
              class="loginBtn wrapper primary l  "
            >
              <span>
                Log in
              </span>
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
